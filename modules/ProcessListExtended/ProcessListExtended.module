<?php namespace ProcessWire;

/**
 * ProcessWire List Process
 *
 * Generates a <dl> definition list of Processes attached to each child page.
 *
 * For more details about how Process modules work, please see:
 * /wire/core/Process.php
 *
 * ProcessWire 3.x, Copyright 2016 by Ryan Cramer
 * https://processwire.com
 *
 * @author: BenByford
 * @url: benbyford.com
 *
 */

class ProcessListExtended extends Process {

	public static function getModuleInfo() {
		return array(
			'title' => __('List', __FILE__), // getModuleInfo title
			'summary' => __('Lists the Process assigned to each child page including non-admin pages of the current', __FILE__), // getModuleInfo summary
			'version' => 100,
			'author' => "BenByford",
			'permanent' => true,
			'permission' => 'page-view',
			);
	}

	public function ___execute() {
		return $this->render();
	}

	protected function render() {
		$defaults = array(
			'dlClass' => 'nav',
			'dtClass' => '',
			'ddClass' => '',
			'aClass' => 'label',
			'disabledClass' => 'ui-priority-secondary',
			'showIcon' => true,
		);
		$settings = $this->wire('config')->ProcessList;
		if(!is_array($settings)) $settings = array();
		$settings = array_merge($defaults, $settings);
		$out = "\n<dl class='$settings[dlClass]'>";
		$cnt = 0;

		foreach($this->page->children("check_access=0") as $child) {

			// if(!$child->viewable()) continue;

			$dtClass = $settings['dtClass'];
			$ddClass = $settings['ddClass'];
			$icon = '';

			// if child has process field
			if($child->process) {

				$info = $this->modules->getModuleInfoVerbose($child->process, array('noCache' => true));
				if($settings['showIcon'] && $info['icon']) {
					$icon = "<i style='float: right;' class='fa fa-3x fa-fw fa-$info[icon] ui-priority-secondary'></i> ";
				}

				$title = $child->title;
				if(!strlen($title)) $title = $info['title'];
				if(!strlen($title)) $title = $child->name;
				$titleTranslated = __($title, '/wire/templates-admin/default.php');
				if($titleTranslated && $titleTranslated != $title) $title = $titleTranslated;
				$title = $this->wire('sanitizer')->entities1($title);
				if($child->summary) {
					$summary = $child->summary;
				} else {
					$summary = $info['summary'];
				}

				$summary = $this->wire('sanitizer')->entities1($summary);

				$url = $child->url;

			// if no process field in child e.g. non-admin template page
			} else {

				$title = $child->get("title|name");
				if($child->template == 'admin') {
					$summary = $this->_('The process module assigned to this page does not appear to be installed.');
					$dtClass .= ' ' . $settings['disabledClass'];
					$ddClass .= ' ' . $settings['disabledClass'];
				} else if($child->page_description) {
					$summary = $this->wire('sanitizer')->entities($child->getUnformatted('page_description'));
				}else if($child->summary) {
					$summary = $this->wire('sanitizer')->entities($child->getUnformatted('summary'));
				} else {
					$summary = '<!--' . $this->_('No description available') . '-->';
				}

				$url = "/admin/page/edit/?id={$child->id}";
			}

			$dtClass = trim($dtClass);
			$ddClass = trim($ddClass);

			$out .= "\n\t<dt class='$dtClass'><a class='$settings[aClass]' href='{$url}'>$icon$title</a></dt>";
			if($summary) $out .= "\n\t<dd class='$ddClass'>$summary</dd>";

			$cnt++;
		}

		$out .= "\n</dl>";

		// if no pages then show no child page message
		if(!$cnt) $out = 'No child pages currently available to show.';

		// return list of page links
		return $out;
	}
}
